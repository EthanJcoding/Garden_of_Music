// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Examination {
  APPROVE
  REVIEW
  REJECT
}

enum Level {
  EASY
  GENERAL
  DIFFICULTY
}

model User {
  userId       String       @id @default(uuid())
  userName     String @unique
  userEmail    String @unique
  password     String
  profileImage String?
  userCoin     Int?
  optOut            Boolean @default(false)
  musicPost         Music[]
  role              Role      @default(USER)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @default(now()) @updatedAt
  purchasedList     Purchased[]

  @@index([userName, userEmail])
}

model Music {
  postId            Int         @id @default(autoincrement())
  author            User        @relation(fields: [authorId], references: [userId])
  authorId          String
  singer            String
  sheetPrice        Int
  sheetInstrument   String
  sheetLevel        Level
  sheetStreamingURL String?
  sheetName         String
  showBoard         Boolean     @default(true)
  examination       Examination
  sheet             Sheet[]
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @default(now()) @updatedAt
  purchasedList     Purchased[] 
}

model Sheet {
  sheetId     Int    @id @default(autoincrement())
  post        Music  @relation(fields: [sheetPostId], references: [postId])
  sheetPostId Int
  sheetSort   Int
  sheetLink   String @unique
}

model Purchased {
  cartId     Int      @id @default(autoincrement())
  user       User     @relation(fields: [cartUserId], references: [userId])
  cartUserId String
  post       Music    @relation(fields: [cartPostId], references: [postId])
  cartPostId Int
  createdAt  DateTime @default(now())
}
